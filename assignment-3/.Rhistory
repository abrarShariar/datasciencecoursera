sort(grouped_data, decreasing = TRUE)
sort(grouped_data[,1], decreasing = TRUE)
sort(grouped_data[,1], decreasing = FALSE)
data.frame(sort(grouped_data[,1], decreasing = FALSE))
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
head(sorted_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE), colnames("index"))
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE), colnames = c("index"))
head(sorted_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE), colnames = c("index"))
head(sorted_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
head(sorted_data)
tail(sorted_data)
sorted_data
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
head(sorted_data)
sorted_data[5]
sorted_data[,5]
class(sorted_data)
colnames(sorted_data)
sorted_data[,1]
sorted_data[1,]
heda(sorted_data)
head(sorted_data)
sorted_data[4,]
rownames(sorted_data[4,])
colnames(sorted_data[4,])
length(sorted_data)
nrow(sorted_data)
tail(sorted_data)
sorted_data[nrow(sorted_data),]
sorted_data[nrow(sorted_data),]
temp <- sorted_data[nrow(sorted_data),]
class(temp)
data.frame(temp)
temp <- data.frame(temp)
rownames(temp)
rankhospital("TX", "heart failure", 4)
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankhospital <- function (state, outcome, num="best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[compressed_data$State == state,]
if(!nrow(compressed_data)){
stop("invalid state")
}
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
# fix COL 3 char
grouped_data <- tapply(as.numeric(compressed_data[,3]), compressed_data$Hospital.Name, sum)
grouped_data <- data.frame(grouped_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(sorted_data)
}
# contains the data at rank = num
temp <- data.frame(sorted_data[num,])
print(rownames(temp))
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankhospital <- function (state, outcome, num="best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[compressed_data$State == state,]
if(!nrow(compressed_data)){
stop("invalid state")
}
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
# fix COL 3 char
grouped_data <- tapply(as.numeric(compressed_data[,3]), compressed_data$Hospital.Name, sum)
grouped_data <- data.frame(grouped_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(sorted_data)
}
# contains the data at rank = num
temp <- try (data.frame(sorted_data[num,])) stop("NA")
print(rownames(temp))
}
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankhospital <- function (state, outcome, num="best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[compressed_data$State == state,]
if(!nrow(compressed_data)){
stop("invalid state")
}
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
# fix COL 3 char
grouped_data <- tapply(as.numeric(compressed_data[,3]), compressed_data$Hospital.Name, sum)
grouped_data <- data.frame(grouped_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(sorted_data)
}
# contains the data at rank = num
temp <- try (data.frame(sorted_data[num,])) stop("NA")
print(rownames(temp))
}
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankhospital <- function (state, outcome, num="best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[compressed_data$State == state,]
if(!nrow(compressed_data)){
stop("invalid state")
}
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
# fix COL 3 char
grouped_data <- tapply(as.numeric(compressed_data[,3]), compressed_data$Hospital.Name, sum)
grouped_data <- data.frame(grouped_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(sorted_data)
}
# contains the data at rank = num
temp <- try (data.frame(sorted_data[num,]) stop("NA"))
print(rownames(temp))
}
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankhospital <- function (state, outcome, num="best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[compressed_data$State == state,]
if(!nrow(compressed_data)){
stop("invalid state")
}
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
# fix COL 3 char
grouped_data <- tapply(as.numeric(compressed_data[,3]), compressed_data$Hospital.Name, sum)
grouped_data <- data.frame(grouped_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(sorted_data)
}
if (num > nrow(sorted_data)) {
stop("NA")
}
# contains the data at rank = num
temp <- data.frame(sorted_data[num,])
print(rownames(temp))
}
rankhospital("MN", "heart attack", 5000)
colIndex <- 11
num <- 20
compressed_data <- data[,c(2,7,colIndex)]
compressed_data
head(compressed_data)
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
head(compressed_data)
class(compressed_data)
colnames(compressed_data) <- c("name", "state", "rate")
head(compressed_data)
compressed_data$name == "SOUTHEAST ALABAMA MEDICAL CENTER"
which(compressed_data$name == "SOUTHEAST ALABAMA MEDICAL CENTER")
head(compressed_data)
compressed_data[compressed_data$state, compressed_data$rate, compressed_data$name,]
compressed_data[order(compressed_data$state, compressed_data$rate, compressed_data$name),]
compressed_data[order(compressed_data$state, compressed_data$rate, compressed_data$name),]
result <- compressed_data[order(compressed_data$state, compressed_data$rate, compressed_data$name),]
head(result)
View(result)
tapply(result$state, result$rate, function(el) { print(el) })
tapply(result$state, result$rate, sum)
tapply(result$state, result$rate, sum())
tapply(result$state, result$rate, sum
)
tapply(result$state, result$rate, mean)
tapply(result$rate, result$state, mean)
which(complete.cases(result))
length(which(complete.cases(result)))
nrow(result)
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
group_by(sorted_data, sorted_data$state) %>%
mutate(rank = rank(asc(sorted_data$rate))) %>%
arrange(rank)
head(sorted_data)
head(result)
group_by(result, result$state) %>%
mutate(rank = rank(asc(result$rate))) %>%
arrange(rank)
group_by(result, result$state) %>%
mutate(rank = rank(result$rate)) %>%
arrange(rank)
group_by(result, result$state) %>%
mutate(rank = dense_rank(result$rate)) %>%
arrange(rank)
group_by(result, result$state) %>%
mutate(rank = dense_rank(desc(result$rate))) %>%
arrange(rank)
head(rank)
head(result)
group_by(result, result$state) %>%
mutate(rank = dense_rank(desc(result$rate)))
head(result)
group_by(result, result$state)
head(result)
temp <- group_by(result, result$state)
group_by(result, result$state) %>% mutate(rank=rank(desc(result$rate)))
group_by(result, result$state) %>% mutate(rank=rank(desc(rate)))
group_by(result, result$state) %>% mutate(rank=rank(rate))
group_by(result, result$state) %>% mutate(rank=rank(rate)) %>% arrange(rank)
result_asc_rank <- group_by(result, result$state) %>% mutate(rank=rank(rate)) %>% arrange(rank)
head(result_asc_rank)
head(result)
result_asc_rank$rank == 1
which(result_asc_rank$rank == 1)
result_rank[which(result_asc_rank$rank == 1)]
result_asc_rank[which(result_asc_rank$rank == 1)]
result_asc_rank[which(result_asc_rank$rank == 1),c(1,2)]
library("dplyr")
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankall <- function (outcome, num = "best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
colnames(compressed_data) <- c("name", "state", "rate")
# sorted by group
result <- compressed_data[order(compressed_data$state, compressed_data$rate, compressed_data$name),]
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(result)
}
if (num > nrow(result)) {
stop("NA")
}
# group by and chill!
result_asc_rank <- group_by(result, result$state) %>% mutate(rank=rank(rate)) %>% arrange(rank)
print(result_asc_rank[which(result_asc_rank$rank == num),c(1,2)])
}
head(rankall("heart attack", 20), 10)
head(result_asc_rank)
result_asc_rank$rank == 20
which(result_asc_rank$rank == 20)
result_data[which(result_asc_rank$rank == 20)]
result_asc_rank[which(result_asc_rank$rank == 20)]
result_asc_rank[which(result_asc_rank$rank == 20), c(1,2)]
head(result_asc_rank[which(result_asc_rank$rank == 20), c(1,2)],20)
tail(result_asc_rank)
tail(rankall("pneumonia", "worst"), 3)
temp <- group_by(result_asc_rank,state) %>% filter(rank == num)
head(temp)
library("dplyr")
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankall <- function (outcome, num = "best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
colnames(compressed_data) <- c("hospital", "state", "rate")
# sorted by group
result <- compressed_data[order(compressed_data$state, compressed_data$rate, compressed_data$hospital),]
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(result)
}
if (num > nrow(result)) {
stop("NA")
}
# group by and chill!
result_asc_rank <- group_by(result, result$state) %>% mutate(rank=rank(rate)) %>% arrange(rank)
temp <- group_by(result_asc_rank,state) %>% filter(rank == num)
print(temp)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
# name => Hospital.name
# outcome => {Hospital.30.Day.Death..Mortality..Rates.from.{outcome}}
outcome_map <- data.frame(
"heart.attack" = 11,
"heart.failure" = 17,
"pneumonia" = 23
)
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
best <- function (state, outcome) {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[compressed_data$State == state,]
if(!nrow(compressed_data)){
stop("invalid state")
}
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
# fix COL 3 char
grouped_data <- tapply(as.numeric(compressed_data[,3]), compressed_data$Hospital.Name, sum)
grouped_data <- data.frame(grouped_data)
# get the min of the grouped_data
# but WTF is grouped_data$grouped_data?? SO? or Coursera fourm
min_val <- grouped_data[which.min(grouped_data$grouped_data),]
# group data sorted
grouped_data_order <- data.frame(grouped_data[order(grouped_data),])
result <- rownames(data.frame(grouped_data_order[grouped_data_order[,1] == min_val,]))
print(result)
}
# test cases
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "pneumonia")
# error
best("BB", "heart attack")
best("NY", "hert attack")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankhospital <- function (state, outcome, num="best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[compressed_data$State == state,]
if(!nrow(compressed_data)){
stop("invalid state")
}
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
# fix COL 3 char
grouped_data <- tapply(as.numeric(compressed_data[,3]), compressed_data$Hospital.Name, sum)
grouped_data <- data.frame(grouped_data)
sorted_data <- data.frame(sort(grouped_data[,1], decreasing = FALSE))
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(sorted_data)
}
if (num > nrow(sorted_data)) {
stop("NA")
}
# contains the data at rank = num
temp <- data.frame(sorted_data[num,])
print(rownames(temp))
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
library("dplyr")
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankall <- function (outcome, num = "best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
colnames(compressed_data) <- c("hospital", "state", "rate")
# sorted by group
result <- compressed_data[order(compressed_data$state, compressed_data$rate, compressed_data$hospital),]
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(result)
}
if (num > nrow(result)) {
stop("NA")
}
# group by and chill!
result_asc_rank <- group_by(result, result$state) %>% mutate(rank=rank(rate)) %>% arrange(rank)
temp <- group_by(result_asc_rank,state) %>% filter(rank == num)
print(temp)
}
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
r <- rankall("heart failure", 10)
r <- rankall("heart failure", 10)
r
r$state == "NV"
r[r$state == "NV"]
r[r$state == "NV",1]
r <- rankall("heart failure", 10)
library("dplyr")
data <- read.csv("dataset/outcome-of-care-measures.csv", colClasses = "character")
rankall <- function (outcome, num = "best") {
colIndex <- 0
if (outcome == "heart attack") {
colIndex <- 11
} else if (outcome == "heart failure") {
colIndex <- 17
} else if (outcome == "pneumonia") {
colIndex <- 23
} else {
stop("invalid outcome")
}
compressed_data <- data[,c(2,7,colIndex)]
compressed_data <- compressed_data[!is.na(as.numeric(compressed_data[,3])),]
colnames(compressed_data) <- c("hospital", "state", "rate")
# sorted by group
result <- compressed_data[order(compressed_data$state, compressed_data$rate, compressed_data$hospital),]
if (num == "best") {
num <- 1
} else if (num == "worst") {
num = nrow(result)
}
if (num > nrow(result)) {
stop("NA")
}
# group by and chill!
result_asc_rank <- group_by(result, result$state) %>% mutate(rank=rank(rate)) %>% arrange(rank)
temp <- group_by(result_asc_rank,state) %>% filter(rank == num)
print(temp)
}
r <- rankall("heart failure", 10)
r$state == "NV"
r[which(r$state == "NV")]
r[which(r$state == "NV"),1]
r <- rankall("pneumonia", "worst")
r
num
r
